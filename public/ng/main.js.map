{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/partials/group/form/form.component.ts","./src/app/partials/group/form/form.component.html","./src/app/app.module.ts","./src/app/pages/group/container/container.component.ts","./src/app/pages/group/container/container.component.html","./src/app/pages/group/edit/edit.component.ts","./src/app/pages/group/edit/edit.component.html","./src/app/pages/group/create/create.component.ts","./src/app/pages/group/create/create.component.html","./src/app/partials/image/form/form.component.ts","./src/app/partials/image/form/form.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {Observable, of, Subscription} from \"rxjs\";\nimport { HttpClient } from '@angular/common/http';\n\nimport { Group } from \"@interfaces/group.interface\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private http: HttpClient) { }\n\n  groups$: Observable<Array<Group>> = of();\n\n  ngOnInit(): void {\n    this.groups$ = this.http.get<Array<Group>>('/api/v1/group');\n  }\n\n  delete(id: number): void {\n    let subscription: Subscription = this.http.delete<Group>(`/api/v1/group/${id}`)\n      .subscribe((response) => {\n        console.log(response);\n        subscription.unsubscribe();\n      });\n\n    this.groups$ = this.http.get<Array<Group>>('/api/v1/group');\n  }\n}\n","<header class=\"row\">\n    <h1 class=\"d-flex justify-content-center\">Dev Daze</h1>\n</header>\n<section class=\"row\">\n  <div class=\"col-12\">\n    <h2 class=\"d-flex justify-content-center\">Projects</h2>\n    <div class=\"row\" *ngFor=\"let group of groups$ | async\">\n      <div class=\"col-3\"><a [routerLink]=\"['/group', group.id, 'edit']\">{{ group.title }}</a></div>\n      <div class=\"col-3\">{{ group.fs_path }}</div>\n      <div class=\"col-3\"><a href=\"{{ group.url }}\">{{ group.url }}</a></div>\n      <div class=\"col-3 d-flex justify-content-center\"><button (click)=\"delete(group.id!)\">Delete</button></div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\"><a [routerLink]=\"['/group/create']\" class=\"btn btn-primary\">Add Group</a></div>\n    </div>\n  </div>\n</section>\n<section class=\"row fixed-bottom\">\n  <div class=\"\"col-12>\n    <iframe src=\"http://localhost:7681\"></iframe>\n  </div>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<router-outlet></router-outlet>\n","import {Component, Input, OnInit, OnDestroy} from '@angular/core';\nimport { Group } from \"@interfaces/group.interface\";\nimport { Image } from \"@interfaces/image.interface\";\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router, Params } from \"@angular/router\";\nimport {Observable, of, Subscription} from \"rxjs\";\nimport { mergeMap, tap, map } from \"rxjs/operators\";\n\n@Component({\n  selector: 'group-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit, OnDestroy {\n\n  @Input() group$: Observable<Group> = of({title: \"\", fs_path: \"\", url: \"\"});\n  private groupSubscription?: Subscription;\n\n  groupForm: FormGroup = this.fb.group({\n    title: [\"\"],\n    fs_path: [\"\"],\n    url: [\"\"]\n  });\n\n  constructor(\n    private router: Router,\n    private http: HttpClient,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.groupSubscription = this.group$.subscribe((group: Group) => {\n      this.groupForm.setValue({\n        title: group.title,\n        fs_path: group.fs_path,\n        url: group.url\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.groupSubscription!.unsubscribe();\n  }\n\n  addImage() {\n  }\n\n  submit() {\n    if(this.groupForm.valid) {\n      let subscription = this.http.post<Group>('/api/v1/group', this.groupForm.value)\n        .subscribe(() => {\n          subscription.unsubscribe();\n          this.router.navigate([\"/\"]);\n        });\n    }\n  }\n}\n","<form [formGroup]=\"groupForm\" (ngSubmit)=\"submit()\">\n  <div class=\"form-group\">\n    <label for=\"group-title\">Email address</label>\n    <input type=\"text\" class=\"form-control\" id=\"group-title\" placeholder=\"Title\" formControlName=\"title\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"group-fs-path\">FS Path</label>\n    <input type=\"text\" class=\"form-control\" id=\"group-fs-path\" placeholder=\"/path/to/project\" formControlName=\"fs_path\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"group-fs-path\">URL</label>\n    <input type=\"text\" class=\"form-control\" id=\"group-url\" placeholder=\"Full or Partial path\" formControlName=\"url\">\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  <button type=\"button\" (click)=\"addImage()\" class=\"btn btn-light\">Add Image</button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { CreateComponent as GroupCreateComponent } from '@pages/group/create/create.component';\nimport { FormComponent as ImageFormComponent } from './partials/image/form/form.component';\nimport { FormComponent as GroupFormComponent } from './partials/group/form/form.component';\nimport { EditComponent as GroupEditComponent } from './pages/group/edit/edit.component';\nimport { ContainerComponent } from './pages/group/container/container.component';\nimport { HomeComponent } from '@pages/home/home.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    GroupFormComponent,\n    GroupCreateComponent,\n    ContainerComponent,\n    GroupEditComponent,\n    ImageFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>container works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { Group } from \"@interfaces/group.interface\";\nimport { Observable, of } from \"rxjs\";\nimport {ActivatedRoute, Params} from \"@angular/router\";\nimport { mergeMap } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditComponent implements OnInit {\n\n  group$: Observable<Group> = of();\n\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient\n  ) { }\n\n  ngOnInit(): void {\n    this.group$ = this.route.params.pipe(\n      mergeMap<Params, Observable<Group>>((params: Params) => this.http.get<Group>(`/api/v1/group/${params.id}`))\n    );\n  }\n\n}\n","<group-form [group$]=\"group$\"></group-form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<group-form></group-form>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Observable, of} from \"rxjs\";\nimport {Group} from \"@interfaces/group.interface\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Image} from \"@interfaces/image.interface\";\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n  @Input() image$: Observable<Image> = of();\n\n  imageForm: FormGroup = this.fb.group({\n    name: [\"\"],\n    envs: [[{}]],\n    ports: [[{}]],\n    volumes: [[{}]]\n  });\n\n  constructor(\n    private router: Router,\n    private http: HttpClient,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  submit() {\n    if(this.imageForm.valid) {\n      let subscription = this.http.post<Image>('/api/v1/image', this.imageForm.value)\n        .subscribe(() => {\n          subscription.unsubscribe();\n          this.router.navigate([\"/\"]);\n        })\n    }\n  }\n}\n","<form [formGroup]=\"imageForm\" (ngSubmit)=\"submit()\">\n  <div class=\"form-group\">\n    <label for=\"image-name\">Name</label>\n    <input type=\"text\" class=\"form-control\" id=\"image-name\" placeholder=\"Name\" formControlName=\"name\">\n  </div>\n  <ng-container *ngFor=\"let env in envs let i = index;\">\n    <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Label\" formControlName=\"label\">\n      :\n      <input type=\"text\" class=\"form-control\" placeholder=\"Value\" formControlName=\"value\">\n    </div>\n  </ng-container>\n  <ng-container *ngFor=\"let port in ports let i = index;\">\n    <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Host Port\" formControlName=\"host_port\">\n      :\n      <input type=\"text\" class=\"form-control\" placeholder=\"Container Port\" formControlName=\"container_port\">\n    </div>\n  </ng-container>\n  <ng-container *ngFor=\"let volume in volumes let i = index;\">\n    <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Host Path\" formControlName=\"host_path\">\n      :\n      <input type=\"text\" class=\"form-control\" placeholder=\"Container Path\" formControlName=\"container_path\">\n    </div>\n  </ng-container>\n\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { CreateComponent as GroupCreateComponent } from \"@pages/group/create/create.component\";\nimport { EditComponent as GroupEditComponent } from \"@pages/group/edit/edit.component\";\nimport { HomeComponent } from \"@pages/home/home.component\";\n\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent },\n  { path: \"group/create\", component: GroupCreateComponent },\n  { path: \"group/:id/edit\", component: GroupEditComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}